/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fakturhammer;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.Charset;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class Aplikacja extends javax.swing.JFrame {

    private String sciezka;
    private JFrame mainFrame;
    private JLabel autorLabel; 
    private ArrayList<Faktura> faktury;
    private JTable tabelka_faktur;
    private DefaultTableModel model;
    private int liczba_plików;
    //
    int k=1;
    //Charset
    Charset ch_pl = Charset.forName("UTF-8"); 
    Charset ch_de = Charset.forName("iso-8859-1");
    Charset ch_wn = Charset.forName("windows-1250");
    
    
    /**
     * Creates new form Aplikacja
     */
    public Aplikacja() {
        initComponents();
        setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage(getClass().getResource("ikona.png")));
        setTitle("Faktur Hammer");
        model = (DefaultTableModel) this.Tab_dane.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Btn_wczytaj = new javax.swing.JButton();
        Btn_wyczyść = new javax.swing.JButton();
        Btn_napraw = new javax.swing.JButton();
        Btn_zapisz = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tab_dane = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        Lbl_nazwa = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        Txp_numer_zamówienia = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Txp_numer_faktury = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        Txp_GLN_Odbiorcy = new javax.swing.JTextPane();
        MnB_menu = new javax.swing.JMenuBar();
        MnB_faktury = new javax.swing.JMenu();
        MnI_wczytaj = new javax.swing.JMenuItem();
        MnI_wyczyść = new javax.swing.JMenuItem();
        MnI_napraw = new javax.swing.JMenuItem();
        MnI_zapisz = new javax.swing.JMenuItem();
        MnI_usuń = new javax.swing.JMenuItem();
        MnI_zamknij = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        Btn_wczytaj.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        Btn_wczytaj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fakturhammer/wczytaj_ico.png"))); // NOI18N
        Btn_wczytaj.setText("Wczytaj");
        Btn_wczytaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_wczytajActionPerformed(evt);
            }
        });

        Btn_wyczyść.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        Btn_wyczyść.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fakturhammer/wyczyść_ico.png"))); // NOI18N
        Btn_wyczyść.setText("Wyczyść");
        Btn_wyczyść.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_wyczyśćActionPerformed(evt);
            }
        });

        Btn_napraw.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        Btn_napraw.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fakturhammer/napraw_ico.png"))); // NOI18N
        Btn_napraw.setText("Napraw");
        Btn_napraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_naprawActionPerformed(evt);
            }
        });

        Btn_zapisz.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        Btn_zapisz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fakturhammer/zapisz_ico.png"))); // NOI18N
        Btn_zapisz.setText("Zapisz zmiany");
        Btn_zapisz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_zapiszActionPerformed(evt);
            }
        });

        Tab_dane.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nazwa faktury", "Stan", "Liczba cyfr"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tab_dane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tab_daneMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tab_dane);

        jLabel1.setText("Nazwa faktury");

        Lbl_nazwa.setText(" ");

        jLabel2.setText("Dane");

        jLabel3.setText("Numer zamówienia");

        jLabel4.setText("Numer faktury");

        jLabel5.setText("GLN Odbiorcy");

        jScrollPane2.setViewportView(Txp_numer_faktury);

        jScrollPane3.setViewportView(Txp_GLN_Odbiorcy);

        MnB_faktury.setText("Faktury");

        MnI_wczytaj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fakturhammer/wczytaj_ico.png"))); // NOI18N
        MnI_wczytaj.setText("Wczytaj faktury");
        MnI_wczytaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnI_wczytajActionPerformed(evt);
            }
        });
        MnB_faktury.add(MnI_wczytaj);

        MnI_wyczyść.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fakturhammer/wyczyść_ico.png"))); // NOI18N
        MnI_wyczyść.setText("Wyczyść tabele");
        MnI_wyczyść.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnI_wyczyśćActionPerformed(evt);
            }
        });
        MnB_faktury.add(MnI_wyczyść);

        MnI_napraw.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fakturhammer/napraw_ico.png"))); // NOI18N
        MnI_napraw.setText("Napraw faktury");
        MnI_napraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnI_naprawActionPerformed(evt);
            }
        });
        MnB_faktury.add(MnI_napraw);

        MnI_zapisz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fakturhammer/zapisz_ico.png"))); // NOI18N
        MnI_zapisz.setText("Zapisz zmiany");
        MnB_faktury.add(MnI_zapisz);

        MnI_usuń.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fakturhammer/kosz_ico.png"))); // NOI18N
        MnI_usuń.setText("Usuń fakturę");
        MnB_faktury.add(MnI_usuń);

        MnI_zamknij.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fakturhammer/iks_ico.png"))); // NOI18N
        MnI_zamknij.setText("Zamknij");
        MnI_zamknij.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnI_zamknijActionPerformed(evt);
            }
        });
        MnB_faktury.add(MnI_zamknij);

        MnB_menu.add(MnB_faktury);

        setJMenuBar(MnB_menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Btn_wczytaj, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Btn_wyczyść)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Btn_napraw, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Lbl_nazwa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Btn_zapisz, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Txp_numer_zamówienia, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2)
                                    .addComponent(jScrollPane3))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_wczytaj)
                    .addComponent(Btn_wyczyść, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_napraw)
                    .addComponent(Btn_zapisz, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Lbl_nazwa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(Txp_numer_zamówienia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel4))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.getAccessibleContext().setAccessibleName("Numer faktury");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MnI_zamknijActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnI_zamknijActionPerformed
        System.exit(0);
    }//GEN-LAST:event_MnI_zamknijActionPerformed

    private void MnI_naprawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnI_naprawActionPerformed
        napraw_faktury();
    }//GEN-LAST:event_MnI_naprawActionPerformed

    private void MnI_wyczyśćActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnI_wyczyśćActionPerformed
        wyczysc_tabelke();
    }//GEN-LAST:event_MnI_wyczyśćActionPerformed

    private void MnI_wczytajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnI_wczytajActionPerformed
        wybierz_folder();
    }//GEN-LAST:event_MnI_wczytajActionPerformed

    private void Btn_wczytajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_wczytajActionPerformed
        wybierz_folder() ;
    }//GEN-LAST:event_Btn_wczytajActionPerformed

    private void Btn_wyczyśćActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_wyczyśćActionPerformed
        wyczysc_tabelke();
    }//GEN-LAST:event_Btn_wyczyśćActionPerformed

    private void Btn_naprawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_naprawActionPerformed
        napraw_faktury();
    }//GEN-LAST:event_Btn_naprawActionPerformed

    private void Btn_zapiszActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_zapiszActionPerformed
        System.out.println("zapisano zmiany");
        
        String numer_zamówienia = this.Txp_numer_zamówienia.getText();
        System.out.println("numer - "+numer_zamówienia);        
        //
        String numer_faktury = this.Txp_numer_faktury.getText();
        System.out.println("GLN Dostawcy - "+numer_faktury);
        //
        String GLN_Odbiorcy = this.Txp_GLN_Odbiorcy.getText();
        System.out.println("GLN Odbiorcy - "+GLN_Odbiorcy);
        //
        wczytana_faktura.zapisz_zmiany(numer_zamówienia,numer_faktury,GLN_Odbiorcy);
        
        int i=0;
        for(Faktura temp : faktury)
        {
            if(temp.get_nazwa().equals(wczytana_faktura.get_nazwa()))
            {
                
                model.setValueAt(numer_zamówienia.length(), i, 2);
                
            }
            i++;
        }      
      //  System.out        
    }//GEN-LAST:event_Btn_zapiszActionPerformed

    private Faktura wczytana_faktura;
    
    private void Tab_daneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tab_daneMouseClicked
        
        int row = this.Tab_dane.getSelectedRow();  
        System.out.println("wiersz "+row+" \t"+model.getValueAt(row, 0).toString());
        if(row!=-1)
        {
            String str = model.getValueAt(row, 0).toString();
            
            String[] dane = wczytaj_dane(sciezka+""+str);
            
            File file = new File(faktury.get(row).get_ścieżka());
            String rozszerz = file.getName().substring(file.getName().lastIndexOf(".")+1);
                       
            wczytana_faktura = new Faktura(
                    rozszerz,
                    file.getName(),
                    file.getAbsolutePath(),
                    model.getValueAt(row, 2).toString(),
                    model.getValueAt(row, 1).toString(),
                    file.getParent());
         
           // System.out.println(rozszerz+" "+file.getAbsolutePath());
            
          //  fakt.show();
          
            this.Lbl_nazwa.setText(wczytana_faktura.get_nazwa());
            String[] tabela = wczytana_faktura.wczytajnumer();
            
            this.Txp_numer_zamówienia.setText(tabela[0]);
            this.Txp_numer_faktury.setText(tabela[1]);
            this.Txp_GLN_Odbiorcy.setText(tabela[2]);
            
           
         //   wczytana_faktura = 
            
        //    this.Lbl_nazwa.setText(str);
        }
        
    }//GEN-LAST:event_Tab_daneMouseClicked
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Aplikacja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Aplikacja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Aplikacja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Aplikacja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Aplikacja().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_napraw;
    private javax.swing.JButton Btn_wczytaj;
    private javax.swing.JButton Btn_wyczyść;
    private javax.swing.JButton Btn_zapisz;
    private javax.swing.JLabel Lbl_nazwa;
    private javax.swing.JMenu MnB_faktury;
    private javax.swing.JMenuBar MnB_menu;
    private javax.swing.JMenuItem MnI_napraw;
    private javax.swing.JMenuItem MnI_usuń;
    private javax.swing.JMenuItem MnI_wczytaj;
    private javax.swing.JMenuItem MnI_wyczyść;
    private javax.swing.JMenuItem MnI_zamknij;
    private javax.swing.JMenuItem MnI_zapisz;
    private javax.swing.JTable Tab_dane;
    private javax.swing.JTextPane Txp_GLN_Odbiorcy;
    private javax.swing.JTextPane Txp_numer_faktury;
    private javax.swing.JTextPane Txp_numer_zamówienia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

    private void napraw_faktury() 
    {
        System.out.println("Naprawiam faktury");
        if(faktury!=null)
        {
            ArrayList<String> lista = new ArrayList<String>();

            try 
            {        
                int rowCount = model.getRowCount(); 
                for (int i = rowCount - 1; i >= 0; i--) 
                {
                    if(!faktury.get(i).get_stan().equals("Numer jest w porządku "))
                    {
                        String str_ = faktury.get(i).get_ścieżka();


                        File txt = new File(str_);
                        if(!txt.isFile()){continue;}
                        String dane = null;
                        BufferedReader odczytaj = new BufferedReader(new InputStreamReader(new FileInputStream(txt),ch_pl));      

                        String str_2;
                        if(faktury.get(i).get_rozszerzenie().equals("xml_b"))
                        {
                            str_2 = faktury.get(i).get_ścieżka().substring(0, str_.indexOf("."))+".xml_b";                            
                        }
                        else
                        {
                            str_2 = faktury.get(i).get_ścieżka().substring(0, str_.indexOf("."))+".xml";
                        }   
                        while (((dane = odczytaj.readLine()) != null )) {

                            int a = 0,b = 0;

                            if(dane.contains("<BuyerOrderNumber>"))
                            {                   
                                a = dane.indexOf(">")+1;
                                if(!dane.contains("brak"))
                                {
                                    if(dane.contains("_"))
                                    {
                                        b = dane.indexOf("_")+1;      

                                        String str = dane.substring(0,a) + dane.substring(b);
                                        dane = str;
                                        b = (dane.indexOf("</"))-(dane.indexOf(">")+1);
                                        model.setValueAt(b+"", i, 2);
                                        model.setValueAt("Poprawione", i, 1);    
                                    }           
                                }
                            }
                            lista.add("\n"+dane);
                        }
                        odczytaj.close();

                        lista.set(0, "<Document-Invoice>");
                        System.out.println(" == > "+str_2);                        
                        FileWriter fw = new FileWriter(str_2); 
                        
                      //  faktury.get(i).set_ścieżka(str_2);
                        BufferedWriter bw = new BufferedWriter(fw);                   
                        for (String line : lista) 
                        {                   
                            bw.write(line);                            
                                //oznaczenie krzyżykiem
                        }                    
                        bw.close();
                        fw.close();

                        odczytaj=null;
                        lista.clear();

                        Thread.sleep(1);
                        File fileDelete = new File(faktury.get(i).get_ścieżka());
                        if((faktury.get(i).get_nazwa().contains(".xml.sent")) 
                            ||
                           (faktury.get(i).get_nazwa().contains(".sent")))
                        {  
                            Thread.sleep(5);
                            fileDelete.delete();
                            System.out.println(" -- "+fileDelete.delete());
                            Thread.sleep(5);
                            if(fileDelete.delete())
                            {  
                                fileDelete.delete();
                            }
                        }
                        faktury.set(i,new Faktura(faktury.get(i),str_2));
                        model.setValueAt(faktury.get(i).get_nazwa()+"", i, 0);
                    }
                    else
                    {
                        System.out.println("Plik "+faktury.get(i).get_nazwa()+" nieruszony");
                    }
                }
                //MLOT
                Thread.sleep(50); 
                if(liczba_plików<new File(sciezka).list().length)
                {    
                    System.out.println(liczba_plików+"  "+new File(sciezka).list().length);
                    //Thread.sleep(30); 
                    Usun_niepotrzebnePliki();                
                }      
                Thread.sleep(100); 
                if(liczba_plików<new File(sciezka).list().length)
                {    
                    System.out.println(liczba_plików+"  "+new File(sciezka).list().length);
                    //Thread.sleep(30); 
                    Usun_niepotrzebnePliki();                
                }                
            }
            catch (IOException | InterruptedException e)
            {
                System.err.println(e);
            }        
  //      faktury=null;            
        }
        else
        {
            System.out.println("Nie ma faktur do naprawy");
        }   
    }

    private void wyczysc_tabelke() {
        if(faktury!=null){
            int rowCount = model.getRowCount();            
            for (int i = rowCount - 1; i >= 0; i--) {
                model.removeRow(i);
            }    
            faktury.clear(); 
            System.out.println("Wyczyszczono tabele");          
        }
        else
        {
            System.out.println("Nie ma tabeli"); 
        }
    }

    private void Usun_niepotrzebnePliki() throws IOException, InterruptedException 
    {  
        System.out.println("Naprawiam faktury");
        if(faktury!=null)
        {
            Thread.sleep(10);
        //    faktury.clear();  
          //  System.out.println(" usunięto - "+faktury.get(10).);
        /*    File file = new File(sciezka);
            String files[] = file.list();          
            for (String temp : files)
            {
                Thread.sleep(2);
                File fileDelete = new File(sciezka.replace("\\", "\\"+"\\"), temp);
                if((temp.contains(".xml.sent")) || (temp.contains(".sent")))
                {
                    Thread.sleep(5); 
                    fileDelete.delete(); 
                    Thread.sleep(5); 
                    if(fileDelete.delete())
                    {  
                        fileDelete.delete(); 
                    }
                }  
            }*/
            for (Faktura temp : faktury)
            {
                Thread.sleep(2);
                if(!temp.get_stan().equals("Numer jest w porządku "))
                {
                    File fileDelete = new File(sciezka.replace("\\", "\\"+"\\"), temp.get_ścieżka());
                    if((temp.get_ścieżka().contains(".xml.sent")) || (temp.get_ścieżka().contains(".sent")))
                    {
                        Thread.sleep(5); 
                        fileDelete.delete(); 
                        Thread.sleep(5); 
                        if(fileDelete.delete())
                        {  
                            fileDelete.delete(); 
                        }
                    }
                }                
            }          
            Thread.sleep(10); 
            System.out.println("Usunięto niepotrzebne pliki");
        }        
    }
    
    private String[] wczytaj_dane(String str_)
    {
        File file = new File(str_.replace("\\","\\"+"\\"));
        String[] tab = {"nie jest plikiem","","0"};
        if(!file.isFile()){return tab;}
        String dane = "";
        try
        {
            FileReader fileReader = new FileReader(file);
            BufferedReader odczytaj = new BufferedReader(fileReader);
            while ((dane = odczytaj.readLine()) != null) 
            {
                int a = 0,b = 0;
                if(dane.indexOf("<BuyerOrderNumber")!=-1)
                {       
                    if(dane.indexOf("<BuyerOrderNumber>")!=-1)
                    {
                        System.out.println(" - "+file.getName().substring(file.getName().lastIndexOf(".")+1)+" - ");

                        tab[2]=file.getName().substring(file.getName().lastIndexOf(".")+1);

                        //
                        a = dane.indexOf(">")+1;
                        b = dane.indexOf("</");
                        tab[1] = b-a+"";
                        if(dane.indexOf("brak")==-1)
                        {
                            if(dane.indexOf("_")!=-1)
                            {
                                tab[0] = "Do poprawy";                           
                                return tab;
                            }   
                            else                        
                            {            
                                tab[0] = "Numer jest w porządku " ;
                                return tab;
                            }
                        }
                        else
                        {
                            tab[0] = "Brakuje numeru faktury";
                         //   if(tab[1].equals("4")){tab[1]="Brak";}
                            return tab;
                        }
                    }
                    if(dane.indexOf("<BuyerOrderNumber />")!=-1)
                    {
                        tab[0] =  "Numer faktury jest uszkodzony";
                        return tab;
                    }
                }
            }
        }
        catch(FileNotFoundException e)
        {
            tab[0] =  "Plik nieistnieje";
            return tab;
        }
        catch(IOException e)
        {
            tab[0] =  "Błąd odczytu pliku";
            return tab;
        }
        tab[0] =  "?";
        return tab;        
    }
    
    private void wybierz_folder() 
    {
        System.out.println("Wybierz folder");
        //
        JFileChooser fileChooser = new JFileChooser();
        
        wyczysc_tabelke();           
        
        // For Directory
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileChooser.setAcceptAllFileFilterUsed(false);

        int rVal = fileChooser.showOpenDialog(null);
        if (rVal == JFileChooser.APPROVE_OPTION) 
        {
                    
            sciezka = ""+fileChooser.getSelectedFile();
                    
            File folder = new File(sciezka);
            faktury = new ArrayList<Faktura>();
            
            for(File x : folder.listFiles())
            {
                System.out.println(x);
                String[] znak = wczytaj_dane(x.getAbsolutePath());
                
                if(znak[0]=="Numer faktury jest uszkodzony")
                {
                    System.out.println("Nie ma żadnych danych do poprawienia, faktura jest uszkodzona");
                    continue;
                }
                
                System.out.println("\t"+znak[2]+"\n\t"+x.getName()+"\n\t"+x.getAbsolutePath().replace("\\", "\\"+"\\")+"\n\t"
                        +Integer.parseInt(znak[1])+"\n\t"+znak[0]+"  "+x.getParent());
                
                faktury.add(new Faktura(znak[2],x.getName(),x.getAbsolutePath(),
                        znak[1],znak[0],x.getParent()));
                
                //tu skończyłem
            }
            System.out.println(" = "+sciezka+"  - "+faktury.size());
                
            for(Faktura x : faktury)
            {
                File file = new File(x.get_ścieżka());
                if (file.isFile() && (file.getName().endsWith(".sent") || file.getName().endsWith(".xml"))) 
                {
                    String ilosc=x.get_liczba_cyfr();
                    
                    if(x.get_liczba_cyfr().equals("4")){ ilosc="Brak"; }
                    
                    model.addRow(new Object[]{file.getName(), x.get_stan(), ilosc});
                }
            }
            liczba_plików = faktury.size();
        }
        else 
        {
            System.out.println("Nic nie wybrano  ");
        }
    }

}
